GPSの移動履歴と地図上経路の近似照合という研究内容で
知能情報工学科4年の中島が発表させていただきます。
まず目次としてこのような構成で話していきます。
冒頭で導入部分、次に問題定義、提案手法、そして実験の内容。
最後に考察とまとめを話します。
gpsログと地図上経路の近似照合がどういうものかということについて話します。
この右図の青い点が地図上のノードと呼ばれるもので、地図上の分岐点だったり行き止まりの点を表します。
そのノードの間で定義できる線分が、地図上の経路です。
そこに、一定間隔でとったgpsの位置点の軌跡を照合することで、
実際に通過した経路が、黄色の線分列のように求めることができます
このように、gpsログと地図上経路の近似照合によって、自分が通ってきた経路や、
自分がどの道にいるか、を求めることができます。
研究内容としては、点列と線分列の照合による移動履歴と地図上経路をマッチングすることです。
入力として、線分の列、移動履歴sと、地図上のノードの集合tを与えて、
共通経路tダッシュを求めます。
移動履歴sは、時系列順に並ぶ有向グラフ。 
一方で、地図上のノードt、順番も向きも存在しない無向グラフです。
点の集合を便宜上点列で表しているが、点列の並びに意味はありません。
これらをマッチングするための提案手法について、次のスライドで説明します。
移動履歴を線分の列, 地図上のノードを点の列とします
まず同一視してもよい距離の最大値をデルタとして
移動履歴のすべて線分sisi+1、線分の列に対して、全てのtj間とのdistanceを求めます
それらが同一視しても良い距離デルタ以下かどうかを判定します。
デルタ以下なら1を、デルタより大きいなら0を返す述語関数としてすべて求めていきます。
表のマスに、この判定結果、デルタ以下かどうかを全てのマスに埋めていきます。
このときの計算量は、移動履歴の長さをm, 地図上ノードの点数をnとしたとき、O(mn2)となります。
埋めた後、表を遡って表のマスが1を満たすときの位置点tj、これがすなわち一致するときのノードになるので
これを抽出することで、共通経路tダッシュを構成することができます。
このバックトラックによる計算量はO(mn)になります。
次に実験内容の説明をします。osmから特定の範囲を抜き出して、
道路上の位置点のみを抜き出します。
この黄緑色の点の集合が道路情報になります。これらを地図上ノードにするには多すぎるので、
余計な箇所を削除していきます。抜き出した後の図が、こちらの図になります。
次のスライドから、この地図データに移動履歴sを照合させます。この赤い点列の軌跡が移動履歴Sになります
これらを先程説明した提案手法により照合させますとこのように、実際にどの経路を通過したか経路データを求めることができました
次のスライドで考察にうつります。
より大きいデータでの処理時間を調べるため、
縦10km, 横8km, ノード数2841で地図データを固定して照合実験を行いました
その結果が以下の表になります
移動距離の線形倍になっていることがわかります
このノード数2841,移動距離4.15km、実行時間1.2秒をベースとすると
例えば飯塚市全域まで範囲を広げたとき、ノード数が7,018になるので
7秒半かかると予想できます
このように、地図面積に関係なく見境なく全てのノードを抜きだしているため、処理時間が地図面積の増加分の2乗倍ほどかかります
無視してもよいノードを度外視し、地図上のノード数を減らすことができれば処理時間を短縮できるのではないかと考えました。







